#!/usr/bin/bash

# goupdate: a simple bash script to update your go version
#     latest version:      $ goupdate
#     relative version:    $ goupdate 1.22
#     specific version:    $ goupdate 1.22.2

RED='\033[31m'
YELLOW='\033[33m'
GREEN='\033[0;32m'
BLUE='\033[34m'
RESET='\033[0m'

if [[ -e /usr/local/go/bin/go ]]; then
    CURRENT_GO_VERSION=$(go version | awk '{print $3}' | awk '{print substr($0, 3)}')
fi  # go1.22.2

if [ "$#" -eq 0 ]; then
    GO_VERSION_HTML=$(wget -q -O - https://go.dev/dl/ | grep ".linux-amd64.tar.gz" | grep "<td" | head -1) || "ERROR"
else # <td class="filename"><a class="download" href="/dl/go1.22.2.linux-amd64.tar.gz">go1.22.2.linux-amd64.tar.gz</a></td>
    GO_VERSION_HTML=$(wget -q -O - https://go.dev/dl/ | grep ".linux-amd64.tar.gz" | grep "<td" | grep $1 | head -1) || "ERROR"
fi

GO_TAR_GZ=$(echo $GO_VERSION_HTML | grep -oP '(?<=href=")[^"]*.tar.gz' | sed 's/^.*\///')
# go1.22.2.linux-amd64.tar.gz

if [[ $GO_VERSION_HTML == "ERROR" || $GO_VERSION_HTML != *"go1."* ]]; then
    echo -e "${RED}error:${RESET} the go downloads html might have changed"
    echo "  url: https://go.dev/dl/"
    exit 1
fi

if [[ $GO_TAR_GZ == "go$CURRENT_GO_VERSION.linux-amd64.tar.gz" ]]; then
    echo -e "${BLUE}unchanged:${RESET} $(go version)"
    exit 0
fi

if [[ ! -e /tmp/$GO_TAR_GZ ]]; then
    wget -P /tmp/ "https://go.dev/dl/$GO_TAR_GZ" 2>/dev/null
fi

if sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf /tmp/$GO_TAR_GZ; then
    echo -e "${GREEN}updated:${RESET} $(go version)"
else 
    echo -e "${RED}error:${RESET} go install to /usr/local/go failed"
    exit 1
fi

if [[ $PATH != ?(*:)/usr/local/go/bin?(:*) ]]; then
    echo -e "${YELLOW}warning:${RESET} add /usr/local/go/bin to the PATH environment variable:"
    echo "    export PATH=\$PATH:/usr/local/go/bin"
fi
